<Routes>
route: '/'
 - Check the session, if not exist, redirect to '/login'
 - Display the current session user's name on the top left corner
 - Display wordsets of the current session user in the center
 - Display 'create a wordset' on the top right corner, and it redirect a user to '/create-wordset'
 - Each wordset has 'start test' and 'study', and they redirect a user to '/test/<wordset_id>' and '/study/<wordset_id>'

route: '/login'
 - Ask a user for his/her name, check if there's any duplicate
 - If successful, set session and redirect to '/'

route: '/create-wordset'
 - A page with a simple form
 - Input field for wordset name at the top
 - Input field for number of words in the wordset *as the number changes, current user input should remains in the field*
 - Input field for a word and its description pair
 - 'create' button to submit

route: '/test/<wordset_id>'
 - 'Start' button to start the test
 - 'Set timer' button to set time limit on each word
 - As a user clicks the 'Start' button, test starts
 - A test will display a word in the wordset in random order, and user types in the decription within the given timer
 - When the test is over, it displays the result to the user. The user can retake the test or go back to '/'

route: '/study/<wordset_id>'
 - A page to display the wordset 
 - A user can either go back to '/' or start the test

<Models>
Class User
	id - uuid(primary_key)
	name - string

Class Wordset
	id - uuid(primary_key)
	user_id - string(foreign_key)
	name - string

Class Word
	id - db.Integer(primary_key)
	wordset_id - Wordset.id(foreign_key)
	name - string
	description - string
	
	